{"version":3,"sources":["src/analytics.js","src/helperFunctions.js","src/index.js"],"names":["trackPageview","params","console","log","url","data","registerEvent","generateAbTestVariationId","variants","min","max","length","Math","floor","random","id","hideElement","elementQuery","document","querySelector","style","display","textVariants","name","elementVariantIdentifier","TEXT_AB_TEST_STORAGE_KEY","userTextVariantId","window","localStorage","getItem","textVariantId","helperFunctions","setItem","variant","PAGE_VIEW_TRIGGERED_STORAGE_KEY","userAlreadyTriggeredPageView","userTextVariant","find","item","location","href","abTests","textAbTest","SIGN_UP_WAS_TRIGGERED_STORAGE_KEY","triggerSignUpLinkClick","eventName","eventData","signUpLink","addEventListener"],"mappings":";AAQe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EARf,IAAMA,EAAgB,SAACC,GACrBC,QAAQC,IAAyBF,wBAAAA,OAAAA,EAAOG,KAAOH,EAAOI,OAGlDC,EAAgB,SAACD,GACrBH,QAAQC,IAAI,2BAAyBE,IAGxB,EAAA,CAAEL,cAAAA,EAAeM,cAAAA,GAAjB,QAAA,QAAA;;ACIA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAZf,IAAMC,EAA4B,SAACC,GAC3BC,IACAC,GAAMF,MAAAA,OAAAA,EAAAA,EAAUG,QAAS,EAExBH,OAAAA,EADeI,KAAKC,MAAMD,KAAKE,UAAYJ,EAFtC,EAEkD,IAFlD,GAGmBK,IAG3BC,EAAc,SAACC,GACKC,SAASC,cAAcF,GAC/BG,MAAMC,QAAU,QAGnB,EAAA,CAAEd,0BAAAA,EAA2BS,YAAAA,GAA7B,QAAA,QAAA;;;;AC8Ef,aA1FA,IAAA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,yBAyFA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxFA,QAAA,gBASA,IAAMM,EAAe,CACnB,CACEP,GAAI,EACJQ,KAAM,kBACNC,yBAA0B,wBAE5B,CACET,GAAI,EACJQ,KAAM,eACNC,yBAA0B,sBAIxBC,EAA2B,yBAE3BC,EAAoBC,OAAOC,aAAaC,QAAQJ,GAElDK,GAAiBJ,EAEK,OAAtBA,IACFI,EAAgBC,EAAgBxB,QAAAA,0BAA0Be,GAC1DK,OAAOC,aAAaI,QAAQP,EAA0BK,IAGxD,IAAsBR,IAAAA,EAAAA,EAAAA,EAAAA,EAAc,EAAA,EAAA,OAAA,IAAA,CAAzBW,IAAAA,EAAN,EAAA,GACCH,IAAkBG,EAAQlB,IACZC,EAAAA,QAAAA,YACIiB,kBAAAA,OAAAA,EAAQT,yBAD5B,OASJ,IAAMU,EAAkC,6BAElCC,EAA+BR,OAAOC,aAAaC,QACvDK,GAGIE,EAAkBd,EAAae,KAAK,SAACC,GAASA,OAAAA,EAAKvB,KAAOe,IAE3B,OAAjCK,IACFR,OAAOC,aAAaI,QAAQE,GAAiC,GAEnDlC,EAAAA,QAAAA,cAAc,CACtBI,IAAKuB,OAAOY,SAASC,KACrBnC,KAAM,CACJoC,QAAS,CACPC,WAAYN,MAAAA,OAAAA,EAAAA,EAAiBb,UAQrC,IAAMoB,EAAoC,8BAEpCC,EAAyB,WAKF,OAJAjB,OAAOC,aAAaC,QAC7Cc,KAIAhB,OAAOC,aAAaI,QAAQW,GAAmC,GAErDrC,EAAAA,QAAAA,cAAc,CACtBuC,UAAW,eACXC,UAAW,CACTJ,WAAYN,MAAAA,OAAAA,EAAAA,EAAiBb,UAM/BwB,EAAa7B,SAASC,cAAc,4BAE1C4B,EAAWC,iBAAiB,QAASJ","file":"src.b2c02ba8.js","sourceRoot":"..","sourcesContent":["const trackPageview = (params) => {\r\n  console.log(`--> Pageview URL: ${params.url}`, params.data);\r\n};\r\n\r\nconst registerEvent = (data) => {\r\n  console.log(\"--> Event Registerd: \", data);\r\n};\r\n\r\nexport default { trackPageview, registerEvent };\r\n","const generateAbTestVariationId = (variants) => {\r\n  const min = 0;\r\n  const max = variants?.length - 1;\r\n  const selectedIndex = Math.floor(Math.random() * (max - min + 1)) + min;\r\n  return variants[selectedIndex].id;\r\n};\r\n\r\nconst hideElement = (elementQuery) => {\r\n  const selectedElement = document.querySelector(elementQuery);\r\n  selectedElement.style.display = \"none\";\r\n};\r\n\r\nexport default { generateAbTestVariationId, hideElement };\r\n","import analytics from \"./analytics.js\";\r\nimport helperFunctions from \"./helperFunctions.js\";\r\nimport \"./styles.css\";\r\n\r\n/* \r\n  We will use the local storage to keep track of the triggers already executed,\r\n  since the values do not expire unless the cache is cleaned. \r\n*/\r\n\r\n// Apply AB-Tests\r\n\r\nconst textVariants = [\r\n  {\r\n    id: 0,\r\n    name: \"control-variant\",\r\n    elementVariantIdentifier: \"text-control-variant\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"test-variant\",\r\n    elementVariantIdentifier: \"text-test-variant\",\r\n  },\r\n];\r\n\r\nconst TEXT_AB_TEST_STORAGE_KEY = \"blinkist_textVariantId\";\r\n\r\nconst userTextVariantId = window.localStorage.getItem(TEXT_AB_TEST_STORAGE_KEY);\r\n\r\nlet textVariantId = +userTextVariantId;\r\n\r\nif (userTextVariantId === null) {\r\n  textVariantId = helperFunctions.generateAbTestVariationId(textVariants);\r\n  window.localStorage.setItem(TEXT_AB_TEST_STORAGE_KEY, textVariantId);\r\n}\r\n\r\nfor (const variant of textVariants) {\r\n  if (textVariantId !== variant.id) {\r\n    helperFunctions.hideElement(\r\n      `[data-ab-test='${variant.elementVariantIdentifier}']`\r\n    );\r\n    continue;\r\n  }\r\n}\r\n\r\n// Trigger Page View\r\n\r\nconst PAGE_VIEW_TRIGGERED_STORAGE_KEY = \"blinkist_pageViewTriggered\";\r\n\r\nconst userAlreadyTriggeredPageView = window.localStorage.getItem(\r\n  PAGE_VIEW_TRIGGERED_STORAGE_KEY\r\n);\r\n\r\nconst userTextVariant = textVariants.find((item) => item.id === textVariantId);\r\n\r\nif (userAlreadyTriggeredPageView === null) {\r\n  window.localStorage.setItem(PAGE_VIEW_TRIGGERED_STORAGE_KEY, true);\r\n\r\n  analytics.trackPageview({\r\n    url: window.location.href,\r\n    data: {\r\n      abTests: {\r\n        textAbTest: userTextVariant?.name,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\n// Handle Sign Up Link click\r\n\r\nconst SIGN_UP_WAS_TRIGGERED_STORAGE_KEY = \"blinkist_signUpWasTriggered\";\r\n\r\nconst triggerSignUpLinkClick = () => {\r\n  const signUpWasTriggered = window.localStorage.getItem(\r\n    SIGN_UP_WAS_TRIGGERED_STORAGE_KEY\r\n  );\r\n\r\n  if (signUpWasTriggered === null) {\r\n    window.localStorage.setItem(SIGN_UP_WAS_TRIGGERED_STORAGE_KEY, true);\r\n\r\n    analytics.registerEvent({\r\n      eventName: \"signUp_click\",\r\n      eventData: {\r\n        textAbTest: userTextVariant?.name,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst signUpLink = document.querySelector(\"[data-id='sign-up-link']\");\r\n\r\nsignUpLink.addEventListener(\"click\", triggerSignUpLinkClick);\r\n"]}